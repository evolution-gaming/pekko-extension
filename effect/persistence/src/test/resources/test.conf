pekko {
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
  persistence {
    journal.plugin = "pekko.persistence.journal.inmem"
    snapshot-store.plugin = "pekko.persistence.snapshot-store.inmem"
  }
}

# In-memory snapshot-store plugin.
pekko.persistence.snapshot-store.inmem {
  # Class name of the plugin.
  class = "org.apache.pekko.persistence.testkit.PersistenceTestKitSnapshotPlugin"
}

fail-on-event-journal {
  class = "com.evolution.pekkoeffect.persistence.FailOnEventJournal"
  plugin-dispatcher = "pekko.actor.default-dispatcher"
}

failing-journal {
  class = "org.apache.pekko.persistence.FailingJournal"
  plugin-dispatcher = "pekko.actor.default-dispatcher"
}

infinite-journal {
  class = "org.apache.pekko.persistence.InfiniteJournal"
  plugin-dispatcher = "pekko.actor.default-dispatcher"
}

delayed-journal {
  class = "org.apache.pekko.persistence.DelayedPersistence"
  plugin-dispatcher = "pekko.actor.default-dispatcher"
  replay-filter.mode = off // do not batch replayed messages
}

failing-snapshot {
  class = "org.apache.pekko.persistence.FailingSnapshotter"
  plugin-dispatcher = "pekko.actor.default-dispatcher"
}

infinite-snapshot {
  class = "org.apache.pekko.persistence.InfiniteSnapshotter"
  plugin-dispatcher = "pekko.actor.default-dispatcher"
}